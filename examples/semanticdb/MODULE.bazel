"""Bazel module ./test/shell/test_examples.sh tests"""

module(name = "semanticdb_example")

bazel_dep(name = "rules_scala")
local_path_override(
    module_name = "rules_scala",
    path = "../..",
)

scala_config = use_extension(
    "@rules_scala//scala/extensions:config.bzl",
    "scala_config",
)
scala_config.settings(
    scala_version = "2.13.16",
)

scala_deps = use_extension(
    "@rules_scala//scala/extensions:deps.bzl",
    "scala_deps",
)
scala_deps.settings(
    fetch_sources = True,
)

#Register and use the custom toolchain that has semanticdb enabled
register_toolchains(
    "@rules_scala//protoc:all",
    "//:semanticdb_toolchain",
)

# Temporarily required for `protoc` toolchainization until resolution of
# protocolbuffers/protobuf#19679.
bazel_dep(
    name = "protobuf",
    version = "29.3",
    repo_name = "com_google_protobuf",
)

single_version_override(
    module_name = "protobuf",
    version = "29.3",
    patches = ["//:protobuf.patch"],
    patch_strip = 1,
)
