"""Bazel module ./test/shell/test_examples.sh tests"""

module(name = "scala3_example")

bazel_dep(name = "rules_scala")
local_path_override(
    module_name = "rules_scala",
    path = "../..",
)

scala_config = use_extension(
    "@rules_scala//scala/extensions:config.bzl",
    "scala_config",
)
scala_config.settings(
    enable_compiler_dependency_tracking = True,
)
use_repo(scala_config, "io_bazel_rules_scala_config")

bazel_dep(name = "compiler_sources")
local_path_override(
    module_name = "compiler_sources",
    path = "../compiler_sources",
)

source_repos = use_extension(
    "@compiler_sources//:extensions.bzl",
    "compiler_source_repos",
)
use_repo(
    source_repos,
    # Configured for the current Scala version
    "scala_compiler",
    "scala_library",
    # Scala 2 specific
    "scala_reflect",
    # Scala 3 specific
    "scala3_interfaces",
    "tasty_core",
    # Hardcoded versions
    "sbt_compiler_interface",
    "scala2_library",
    "scala_asm",
)

scala_deps = use_extension(
    "@rules_scala//scala/extensions:deps.bzl",
    "scala_deps",
)
scala_deps.settings(
    fetch_sources = True,
    validate_scala_version = False,
)

register_toolchains("//:dt_scala_toolchain")
